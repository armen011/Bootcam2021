{"version":3,"sources":["components/Button/Button.jsx","components/Display/Display.jsx","components/Input/Input.jsx","components/Calculator/Calculator.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Button","props","bool","disable","text","type","className","onClick","metod","disabled","Display","Input","value","min","placeholder","onChange","e","target","Calculator","handleInc","localStorage","count","JSON","stringify","state","clickCount","step","setState","prevState","parseInt","handleDec","handleReset","handleMax","max","maxCount","handleMin","minCount","handleStep","this","parse","disableDec","disableInc","disableReset","color","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3074526b.chunk.js","sourcesContent":["import \"./button.css\";\r\nexport default function Button(props) {\r\n  const bool = props.disable;\r\n  const text = props.text;\r\n  const type = bool ? \"disabled\" : props.type;\r\n  return (\r\n    <button className={type} onClick={props.metod} disabled={props.disable}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n","export function Display(props) {\r\n  const text = props.text;\r\n  return <p>{text}</p>;\r\n}\r\n","import \"./input.css\";\r\nexport default function Input(props) {\r\n  const text = props.text;\r\n  const type = props.type;\r\n  const metod = props.metod;\r\n  const value = props.value;\r\n\r\n  return (\r\n    <label>\r\n      {text}\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        min=\"0\"\r\n        placeholder={text}\r\n        className={type}\r\n        value={value}\r\n        onChange={(e) => metod(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button.jsx\";\r\nimport { Display } from \"../Display/Display.jsx\";\r\nimport Input from \"../Input/Input.jsx\";\r\nimport \"./calculator.css\";\r\n//this is a calculator counting the amount of clicks\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      clickCount: 0,\r\n      maxCount: 10,\r\n      minCount: 0,\r\n      step: 1,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.count) {\r\n      this.setState((prevState) => ({\r\n        clickCount: JSON.parse(localStorage.count),\r\n      }));\r\n    }\r\n    if (localStorage.max) {\r\n      this.setState((prevState) => ({\r\n        maxCount: JSON.parse(localStorage.max),\r\n      }));\r\n    }\r\n    if (localStorage.min) {\r\n      this.setState((prevState) => ({\r\n        minCount: JSON.parse(localStorage.min),\r\n      }));\r\n    }\r\n    if (localStorage.step) {\r\n      this.setState((prevState) => ({\r\n        step: JSON.parse(localStorage.step),\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleInc = () => {\r\n    localStorage.count = JSON.stringify(\r\n      +this.state.clickCount + this.state.step\r\n    );\r\n    this.setState((prevState) => ({\r\n      clickCount: prevState.clickCount + parseInt(this.state.step),\r\n    }));\r\n  };\r\n  handleDec = () => {\r\n    localStorage.count = JSON.stringify(\r\n      this.state.clickCount - this.state.step\r\n    );\r\n    this.setState((prevState) => ({\r\n      clickCount: prevState.clickCount - parseInt(this.state.step),\r\n    }));\r\n  };\r\n  handleReset = () => {\r\n    localStorage.count = JSON.stringify(0);\r\n    this.setState((prevState) => ({\r\n      clickCount: 0,\r\n    }));\r\n  };\r\n  handleMax = (value) => {\r\n    localStorage.max = JSON.stringify(+value);\r\n    this.setState((prevState) => ({\r\n      maxCount: value,\r\n    }));\r\n  };\r\n  handleMin = (value) => {\r\n    localStorage.min = JSON.stringify(+value);\r\n    this.setState((prevState) => ({\r\n      minCount: value,\r\n      clickCount:\r\n        prevState.clickCount < value ? parseInt(value) : prevState.clickCount,\r\n    }));\r\n  };\r\n  handleStep = (value) => {\r\n    localStorage.step = JSON.stringify(+value);\r\n    this.setState((prevState) => ({\r\n      step: value,\r\n    }));\r\n  };\r\n  render() {\r\n    const disableDec =\r\n      this.state.clickCount <= 0 || this.state.clickCount <= this.state.minCount\r\n        ? true\r\n        : false;\r\n    const disableInc =\r\n      this.state.clickCount >= this.state.maxCount ? true : false;\r\n    const disableReset = this.state.clickCount === 0 ? true : false;\r\n\r\n    return (\r\n      <div className=\"calculator\">\r\n        <div className=\"displayBar\">\r\n          <Display text={this.state.clickCount} color=\"red\" />\r\n        </div>\r\n        <div className=\"btnsBar\">\r\n          <Button\r\n            text=\"Inc\"\r\n            type=\"primary\"\r\n            metod={this.handleInc}\r\n            disable={disableInc}\r\n          />\r\n          <Button\r\n            text=\"Dec\"\r\n            type=\"secondary\"\r\n            metod={this.handleDec}\r\n            disable={disableDec}\r\n          />\r\n          <Button\r\n            text=\"Reset\"\r\n            type=\"secondary2\"\r\n            metod={this.handleReset}\r\n            disable={disableReset}\r\n          />\r\n        </div>\r\n        <div className=\"inputBar\">\r\n          <Input\r\n            text=\"Max\"\r\n            type=\"primaryInput\"\r\n            metod={this.handleMax}\r\n            value={this.state.maxCount}\r\n          />\r\n          <Input\r\n            text=\"Min\"\r\n            type=\"secondaryInput\"\r\n            metod={this.handleMin}\r\n            value={this.state.minCount}\r\n          />\r\n          <Input\r\n            text=\"Step\"\r\n            type=\"secondaryInput2\"\r\n            metod={this.handleStep}\r\n            value={this.state.step}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Calculator from \"./components/Calculator/Calculator\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}